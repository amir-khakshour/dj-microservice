apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: gridscale
spec:
  serviceName: rabbitmq-internal
  revisionHistoryLimit: 2
  updateStrategy:
    type: RollingUpdate
  replicas: 2
  selector:
    matchLabels:
          app: rabbitmq
  template:
    metadata:
      name: rabbitmq
      labels:
        app: rabbitmq
    spec:
      serviceAccountName: rabbitmq
      terminationGracePeriodSeconds: 10
      containers:
      - name: rabbitmq
        image: gridscale/rabbitmq
        lifecycle:
          postStart:
            exec:
              command:
                - /bin/sh
                - -c
                - >
                  until rabbitmqctl --erlang-cookie ${RABBITMQ_ERLANG_COOKIE} node_health_check; do sleep 1; done;
                  rabbitmqctl --erlang-cookie ${RABBITMQ_ERLANG_COOKIE} set_policy ha-all "" '{"ha-mode":"all", "ha-sync-mode": "automatic"}'

        ports:
        - containerPort: 4369
        - containerPort: 5672
        - containerPort: 25672
        - containerPort: 15672
        resources:
          requests:
            memory: "800Mi"
            cpu: "0.4"
          limits:
            memory: "900Mi"
            cpu: "0.6"
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - >
                curl -i -u ${RABBITMQ_BASIC_AUTH} http://localhost:15672/api/aliveness-test/%2F
          initialDelaySeconds: 15
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - >
                curl -i -u ${RABBITMQ_BASIC_AUTH} http://localhost:15672/api/aliveness-test/%2F
          initialDelaySeconds: 15
          periodSeconds: 5
        envFrom:
         - configMapRef:
             name: rabbitmq-cfg
        env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
          - name: RABBITMQ_BASIC_AUTH
            value: "guest:guest"
          - name: RABBITMQ_NODENAME
            value: "rabbit@$(HOSTNAME).rabbitmq-internal.$(NAMESPACE).svc.cluster.local"
          - name: K8S_SERVICE_NAME
            value: "rabbitmq-internal"
          - name: RABBITMQ_DEFAULT_USER
            valueFrom:
              secretKeyRef:
                name: rabbitmq-credentials
                key: user
          - name: RABBITMQ_DEFAULT_PASS
            valueFrom:
              secretKeyRef:
                name: rabbitmq-credentials
                key: password
          - name: RABBITMQ_ERLANG_COOKIE
            value: secret_cookie
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: RABBITMQ_ALIVE_USER
            valueFrom:
              secretKeyRef:
                name: rabbitmq-credentials
                key: aliveUser
          - name: RABBITMQ_ALIVE_PASS
            valueFrom:
              secretKeyRef:
                name: rabbitmq-credentials
                key: alivePass
